/*
* ============================================================================
*  Name     : CMPToolkitContainer from MPToolkitContainer.h
*  Part of  : MPToolkit
*  Created  : 01.11.2005 by Faraz Ahmed Memon
*  Implementation notes:
*     Initial content was generated by Series 60 Application Wizard.
*  Version  :
*  Copyright: i10 RWTH Aachen
* ============================================================================
*/

#include "MPToolkitContainer.h"
#include <eiklabel.h>


void CMPToolkitContainer::ConstructL(const TRect& aRect)
{

//iConLog.Connect();
//iConLog.CreateLog(_L("MPToolkit"),_L("ConLog"),EFileLoggingModeOverwrite);

	CreateWindowL();
	_LIT(iPathName,"\\System\\Apps\\MPToolkit\\nokia.mbm");
	iBackground = iEikonEnv->CreateBitmapL(iPathName, 0 );

    iLabel = new (ELeave) CEikLabel;
    iLabel->SetContainerWindowL( *this );
    iLabel->SetTextL( _L("Status :\nNot Connected") );

    SetRect(aRect);

    ActivateL();
}

CMPToolkitContainer::~CMPToolkitContainer()
{
    delete iLabel;
}

void CMPToolkitContainer::SendToBackground()
{
	TApaTask task(iEikonEnv->WsSession());
               
	// Initialise the object with the window group id of
	// our application (so that it represent our app)
	task.SetWgId(CEikonEnv::Static()->RootWin().Identifier());

	// Request window server to bring our application
	// to foreground
	task.SendToBackground();
}

void CMPToolkitContainer::SizeChanged()
{
    iLabel->SetExtent( TPoint(10,40), iLabel->MinimumSize() );
}


TInt CMPToolkitContainer::CountComponentControls() const
{
    return 1; // return nbr of controls inside this container
}

CCoeControl* CMPToolkitContainer::ComponentControl(TInt aIndex) const
{
    switch ( aIndex )
    {
        case 0:
            return iLabel;
        default:
            return NULL;
    }
}

void CMPToolkitContainer::Draw(const TRect& aRect) const
{
    CWindowGc& gc = SystemGc();
	TRect drawRect(0,0,176,140);
	gc.DrawBitmap(drawRect, iBackground);
    gc.SetPenStyle( CGraphicsContext::ENullPen );
    gc.SetBrushColor( KRgbGray );
    gc.SetBrushStyle( CGraphicsContext::ESolidBrush );
}

void CMPToolkitContainer::HandleControlEventL(CCoeControl* /*aControl*/,TCoeEvent /*aEventType*/)
{

}
