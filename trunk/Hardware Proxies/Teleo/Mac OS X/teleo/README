<pre>
/* Copyright 2003 MakingThings LLC. */

README
Teleo Application SDK version 1.0.1

Zaurus (Linux arm)
  built with arm-linux-gcc version 2.95.2
Linux x86
  built with gcc 3.2
Win32
  built with MS Visual Studio 6.0
Mac OS X
  built with Apple GCC v. 1161 based on gcc 3.1

1. INSTALLATION INSTRUCTIONS - LINUX X86
2. INSTALLATION INSTRUCTIONS - LINUX ARM
3. INSTALLATION INSTRUCTIONS - MAC OS X
4. INSTALLATION INSTRUCTIONS - WIN32
5. REVISION HISTORY


1. INSTALLATION INSTRUCTIONS - LINUX X86
  1. download teleoAppSDK_linux_x86_v_1_0_1.tgz
  2. unpack with 'tar -zxvf teleoAppSDK_linux_x86_v_1_0_1.tgz'
  3. cd teleo/samples
  4. make

  documentation is in teleo/doc/code

2. INSTALLATION INSTRUCTIONS - LINUX ARM
   This installation is for a cross-development environment,
   where the workstation is probably running X86 based Linux,
   and the target will be running an ARM based Linux, such as
   the Sharp Zaurus. As there is no ARM driver for the USB
   device, and as the Sharp Zaurus does not have USB host 
   capability, we use the serial port on the Zaurus. For
   this you will need the Teleo Serial Translator, which
   will be available very soon.

   You will need to download and set up the cross development
   environment. This is well described at:

   http://docs.zaurus.com/index.php?id=linux_compiler_setup_howto

   This will install the compiler at /opt/Embedix, which is where
   our Makefile expects to find it.


    On the X86 based Linux workstation:

  1. download teleoAppSDK_linux_arm_v_1_0_1.tgz
  2. unpack with 'tar -zxvf teleoAppSDK_linux_arm_v_1_0_1.tgz'
  3. cd teleo/samples
  4. make TARGET=zaurus
  5. copy the executables to the ARM target. This will depend
     on how you communicate with your target. We use a Zaurus 
     with an 802.11 card and transfer files via scp:
       scp light root@192.168.0.58:

    On the Zaurus, invoke the program and specify the serial
    port on the command line:

       ./stepper /dev/ttyS0
   
  documentation is in teleo/doc/code

3. INSTALLATION INSTRUCTIONS - MAC OS X
  0. if you don't have them, download the Mac OS X Developer Tools from :
        http://developer.apple.com/tools/download/ 
  1. download teleoAppSDK_MacOS_X_v_1_0_1.tgz
  2. unpack with 'tar -zxvf teleoAppSDK_MacOS_X_v_1_0_1.tgz'
  3. cd teleo/lib
  4. refresh the index with 'ranlib teleolib_macos_x.a'
  5. cd ../samples
  6. build the sample code with 'make TARGET=macosx'

  documentation is in teleo/doc/code

4. INSTALLATION INSTRUCTIONS - WIN32
  1. download teleoAppSDK_win32_v_1_0_1.zip
  2. unpack with WinZip or other means
  3. open the workspace in samples with Visual Studio
  4. build the samples
  5. run them

  documentation is in doc/code

4. REVISION HISTORY

1.0.1
-----
  Added Intro Module

  Fixed bug in Windows driver which might have caused long
  delays in propertSet calls


1.0.0
-----
  Minor bug fixes


0.9.2
-----
  Added the Linux ARM for Zaurus library and samples.

  Added the Mac OS X library and samples.

  Added the Win32 library and samples.

  Added a command line option to the sample files to permit 
  the user to specify which port is opened.  Under Win32, 
  for example you can now type 
    chart com2 
  in the console and chart will try to open com2 instead of 
  com1, the default.
 

0.9.1
-----
  Added value callbacks to all values that are set, so the
  user can tell when a device has bound and has set properties

  Added linux_x86 to release name to distinguish from upcoming
  Windows and Macos X releases
   

0.9 
---
  first beta release
   
</pre>
