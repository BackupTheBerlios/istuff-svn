import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.ListIterator;
import java.util.Vector;

import org.jdom.Document;
import org.jdom.Element;
import org.jdom.JDOMException;
import org.jdom.input.SAXBuilder;

public class ConfigDataHolder {
	
	
	public static Vector <File> getSearchDirectories () {
		Document docWithConfig = new Document();
		SAXBuilder builder = new SAXBuilder();
		Element xmlRoot = null;
		try {
			// Load the configuration file
			File configFile = new File("configStarter.xml");
			docWithConfig = builder.build(configFile);
			xmlRoot = docWithConfig.getRootElement();
			System.out.println("Processing XML - file");
		} catch (JDOMException e) {
			System.out.println("The XML - file may be corrupt");
		} 
		catch (IOException e) {
			System.out.println("No configFile found. New file created");
			new PreferencesDialog();
		}
		
		Vector <File> searchDirectories = new Vector <File> ();
		//searchDirectories.add("HALLO");
		// Now construct the proxyTree from the specified search directories
		if (xmlRoot != null) {
			Element searchDirs = xmlRoot.getChild("SearchDirectories");
			//List<Element> xmlElements = (List<Element>) (Element) searchDirs.getChildren();
			List xmlElements = searchDirs.getChildren();
			for (ListIterator xmlIterator = xmlElements.listIterator(); xmlIterator
					.hasNext();) {
				Element currentElement = (Element) xmlIterator.next();
				File newDirectory = new File(currentElement.getValue());
				searchDirectories.add(newDirectory);
			}			
			System.out.println(searchDirectories);
		}
		return searchDirectories;
}
}

