import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Vector;

import java.io.*;

public class ProxyNode{

	private String content;
	private String kind; // Hardware or Software
	private String name; // Name of the Proxy
	private String proxyClass; // Class that the Proxy belongs to
	private String executableName; // Prefix of the executable
	
	
	private LinkedList<CustomNode> successors;
	private ListIterator<CustomNode> si;
	
	public CustomNode () {
		successors = new LinkedList<CustomNode>();
		si = successors.listIterator();
	}
	
	public CustomNode (String kind, String name, String proxyClass, String executableName){
		successors = new LinkedList<CustomNode>();
		si = successors.listIterator();
		
		kind = kind;
		name = name;
		proxyClass = proxyClass;
		executableName = executableName;
	}
	
	public void setKind (String kind){
		kind = kind;
	}
	
	public void setName (String name){
		name = name;
	}
	
	public void setproxyClass (String proxyClass){
		proxyClass = proxyClass;
	}
	
	public void setExecutableName (String executableName){
		executableName = executableName;
	}
	
	public String getKind (){
		return kind;
	}
	
	public String getName (){
		return name;
	}
	
	public String getproxyClass (){
		return proxyClass;
	}
	
	public String getExecutableName (){
		return executableName;
	}
	
	public void setContent (String content){
		
	}
	
	public String getContent(){
		return content;
	}
	
	public void setSuccessor(CustomNode successor){
		successors.add(successor);
	}
	
	public LinkedList<CustomNode> getSuccessors (){
		return successors;
	}
	
	public boolean hasSuccessors (){
		if (successors.isEmpty())
		  return false;
		else 
		  return true;
	}
	
	public ListIterator<CustomNode> getIterator (){
		return si;
	}
}
