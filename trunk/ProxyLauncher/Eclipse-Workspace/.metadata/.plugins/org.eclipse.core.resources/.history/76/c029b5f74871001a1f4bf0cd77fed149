import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JToggleButton;

// This extended JToggleButton changes its color when activated or deactivated
@SuppressWarnings("serial")
public class ChangeColorButton extends JToggleButton implements ActionListener{

	private Color _activatedColor;
	private Color _deactivatedColor;
	private JToggleButton _correspondingButton;
	private JComboBox _correspondingComboBox;
	
	public ChangeColorButton () {
		super();
		setSelected(false);
		addActionListener(this);
	}
	
	public ChangeColorButton (String label) {
		super(label);
		addActionListener(this);
	}
	
	public ChangeColorButton (Color activatedColor, Color deactivatedColor){
		super();
		_activatedColor = activatedColor;
		_deactivatedColor = deactivatedColor;
		setSelected(false);
		setUI(new CustomButtonUI(activatedColor));
		setBackground(deactivatedColor);
		addActionListener(this);
	}
	
	public ChangeColorButton (String label, Color activatedColor, Color deactivatedColor){
		super(label);
		_activatedColor = activatedColor;
		_deactivatedColor = deactivatedColor;
		setSelected(false);
		setUI(new CustomButtonUI(activatedColor));
		setBackground(deactivatedColor);
		addActionListener(this);
	}
	
	public void actionPerformed(ActionEvent e) {
		if (!isSelected())
		{
			setBackground(getDeactivatedColor());
			if (_correspondingButton != null)
				_correspondingButton.setEnabled(false);
		}
		else
			if (_correspondingButton != null)
				_correspondingButton.setEnabled(true);
	}
	
	public Color getActivatedColor (){
		return _activatedColor;
	}
	
	public Color getDeactivatedColor (){
		return _deactivatedColor;
	}
	
	public void setCorrespondingButton (JToggleButton cb){
		_correspondingButton = cb;
	}
	
}

Button = cb;
	}

}
