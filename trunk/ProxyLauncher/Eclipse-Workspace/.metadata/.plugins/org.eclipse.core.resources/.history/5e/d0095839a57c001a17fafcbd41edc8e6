import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class ProxyThread extends Thread implements Runnable{

	private String _className;
	private File _env;
	private Process _process;
	private String _eventHeap;
	
	public ProxyThread (String className, File env, String eventHeap){
		_className = className;
		_env = env;
		_eventHeap = eventHeap;
	}
	
	public void run() {
		String line;
		JFrame bufferOutput = new JFrame(_className + " Output");
		JTextArea bufferText = new JTextArea();
		bufferOutput.add(bufferText);
		bufferOutput.setVisible(true);
		bufferOutput.setSize(100,100);
	try {

		//String cmd = "java -classpath ../../Lib/iROS.jar;. ".concat(_className).concat(_eventHeap);; 	
		String cmd = "java -classpath ../../Lib/iROS.jar;. "+ _className + " " + _eventHeap;
			_process = Runtime.getRuntime().exec(cmd, null, _env);
			BufferedReader input = 
			       new BufferedReader
			         (new InputStreamReader(_process.getInputStream()));
			     while ((line = input.readLine()) != null) {
			    	 bufferText.append(line + " \n");
			       System.out.println(line);
			       }
		} catch (IOException e) {
		}
	}

	public void kill() {
		_process.destroy();
	}
}
